[["version", 4], ["markdown", "<!-- contributed by Dietrich Ayala [dietrich@mozilla.com]  -->\n<!-- edited by Noelle Murata [fiveinchpixie@gmail.com]  -->\n\nThe `tabs` module provides easy access to tabs and tab-related events.\n\nAll tabs across all windows can be enumerated by using the `tabs` module itself\nlike so:\n\n    var tabs = require(\"tabs\");\n    for each (var tab in tabs)\n      console.log(tab.title);\n\nYou can open a new tab, specifying various properties including location:\n\n    var tabs = require(\"tabs\");\n    tabs.open(\"http://www.example.com\");\n\nYou can register event listeners to be notified when tabs open, close, finish\nloading DOM content, or are made active or inactive:\n\n    var tabs = require(\"tabs\");\n\n    // Listen for tab openings.\n    tabs.on('open', function onOpen(tab) {\n      myOpenTabs.push(tab);\n    });\n\n    // Listen for tab content loads.\n    tabs.on('ready', function(tab) {\n      console.log('tab is loaded', tab.title, tab.url)\n    });\n\nYou can get and set various properties of tabs (but note that properties\n relating to the tab's content, such as the URL, will not contain valid\nvalues until after the tab's `ready` event fires). By setting the `url`\nproperty you can load a new page in the tab:\n\n    var tabs = require(\"tabs\");\n    tabs.on('activate', function(tab) {\n      tab.url = \"http://www.example.com\";\n    });\n\nYou can attach a [content script](dev-guide/addon-development/web-content.html)\nto the page hosted in a tab, and use that to access and manipulate the page's\ncontent:\n\n    var tabs = require(\"tabs\");\n\n    tabs.on('activate', function(tab) {\n      tab.attach({\n        contentScript: 'self.postMessage(document.body.innerHTML);',\n        onMessage: function (message) {\n          console.log(message);\n        }\n      });\n    });\n\n"], ["api-json", {"datatype": "Tab", "line_number": 58, "type": "property", "name": "activeTab", "description": "\nThe currently active tab in the active window. This property is read-only. To\nactivate a `Tab` object, call its `activate` method.\n\n**Example**\n\n    // Get the active tab's title.\n    var tabs = require(\"tabs\");\n    console.log(\"title of active tab is \" + tabs.activeTab.title);"}], ["markdown", "\n\n"], ["api-json", {"datatype": "number", "line_number": 71, "type": "property", "name": "length", "description": "The number of open tabs across all windows."}], ["markdown", "\n\n"], ["api-json", {"line_number": 76, "name": "open", "params": [{"line_number": 110, "name": "options", "datatype": "object", "required": true, "props": [{"datatype": "string", "line_number": 117, "required": false, "name": "url", "description": "String URL to be opened in the new tab.\nThis is a required property.\n"}, {"datatype": "boolean", "line_number": 121, "required": false, "name": "inNewWindow", "description": "If present and true, a new browser window will be opened and the URL will be\nopened in the first tab in that window. This is an optional property.\n"}, {"datatype": "boolean", "line_number": 125, "required": false, "name": "inBackground", "description": "If present and true, the new tab will be opened to the right of the active tab\nand will not be active. This is an optional property.\n"}, {"datatype": "boolean", "line_number": 129, "required": false, "name": "isPinned", "description": "If present and true, then the new tab will be pinned as an\n[app tab](http://support.mozilla.com/en-US/kb/what-are-app-tabs).\n"}, {"datatype": "function", "line_number": 133, "required": false, "name": "onOpen", "description": "A callback function that will be registered for 'open' event.\nThis is an optional property."}, {"datatype": "function", "line_number": 136, "required": false, "name": "onClose", "description": "A callback function that will be registered for 'close' event.\nThis is an optional property."}, {"datatype": "function", "line_number": 139, "required": false, "name": "onReady", "description": "A callback function that will be registered for 'ready' event.\nThis is an optional property."}, {"datatype": "function", "line_number": 142, "required": false, "name": "onActivate", "description": "A callback function that will be registered for 'activate' event.\nThis is an optional property."}, {"datatype": "function", "line_number": 145, "required": false, "name": "onDeactivate", "description": "A callback function that will be registered for 'deactivate' event.\nThis is an optional property."}], "description": "An object containing configurable options for how and where the tab will be\nopened, as well as a listeners for the tab events.\n\nIf the only option being used is `url`, then a bare string URL can be passed to\n`open` instead of adding at a property of the `options` object.\n"}], "signature": "open(options)", "type": "function", "description": "Opens a new tab. The new tab will open in the active window or in a new window,\ndepending on the `inNewWindow` option.\n\n**Example**\n\n    var tabs = require(\"tabs\");\n\n    // Open a new tab on active window and make tab active.\n    tabs.open(\"http://www.mysite.com\");\n\n    // Open a new tab in a new window and make it active.\n    tabs.open({\n      url: \"http://www.mysite.com\",\n      inNewWindow: true\n    });\n\n    // Open a new tab on active window in the background.\n    tabs.open({\n      url: \"http://www.mysite.com\",\n      inBackground: true\n    });\n\n    // Open a new tab as an app tab and do something once it's open.\n    tabs.open({\n      url: \"http://www.mysite.com\",\n      isPinned: true,\n      onOpen: function onOpen(tab) {\n        // do stuff like listen for content\n        // loading.\n      }\n    });\n"}], ["markdown", "\n\n"], ["api-json", {"line_number": 150, "methods": [{"line_number": 195, "signature": "pin()", "type": "method", "name": "pin", "description": "Pins this tab as an [app tab][].\n[app tab]:http://support.mozilla.com/en-US/kb/what-are-app-tabs"}, {"line_number": 201, "signature": "unpin()", "type": "method", "name": "unpin", "description": "Unpins this tab."}, {"line_number": 206, "name": "close", "params": [{"datatype": "function", "line_number": 210, "required": false, "name": "callback", "description": "A function to be called when the tab finishes its closing process.\nThis is an optional argument."}], "signature": "close(callback)", "type": "method", "description": "Closes this tab.\n"}, {"line_number": 215, "signature": "activate()", "type": "method", "name": "activate", "description": "Makes this tab active, which will bring this tab to the foreground."}, {"line_number": 220, "name": "attach", "returns": {"datatype": "Worker", "line_number": 254, "description": "See [Content Scripts guide](dev-guide/addon-development/web-content.html)\nto learn how to use the `Worker` object to communicate with the content script.\n"}, "params": [{"line_number": 238, "name": "options", "datatype": "object", "required": true, "props": [{"datatype": "string,array", "line_number": 241, "required": false, "name": "contentScriptFile", "description": "The local file URLs of content scripts to load.  Content scripts specified\nby this option are loaded *before* those specified by the `contentScript`\noption. Optional."}, {"datatype": "string,array", "line_number": 245, "required": false, "name": "contentScript", "description": "The texts of content scripts to load.  Content scripts specified by this\noption are loaded *after* those specified by the `contentScriptFile` option.\nOptional."}, {"datatype": "function", "line_number": 249, "required": false, "name": "onMessage", "description": "A function called when the page mod receives a message from content scripts. \nListeners are passed a single argument, the message posted from the \ncontent script.\n"}], "description": "Options for the page mod, with the following keys:\n"}], "signature": "attach(options)", "type": "method", "description": "  Create a page mod and attach it to the document in the tab.\n\n**Example**\n\n    var tabs = require(\"tabs\");\n\n    var worker = tabs.activeTab.attach({\n      contentScript: \n        'document.body.style.border = \"5px solid black\";' +\n        'postMessage(document.getElementById(\"#my-watched-element\").textContent);',\n      onMessage: function (data) {\n        // data is equal to the text of my DOM element with ID \"#my-watched-element\"\n\n      }\n    });\n"}], "description": "A `Tab` instance represents a single open tab. It contains various tab\nproperties, several methods for manipulation, as well as per-tab event\nregistration.\n\nTabs emit all the events described in the Events section. Listeners are\npassed the `Tab` object that triggered the event.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "events": [{"arguments": [{"datatype": "Tab", "line_number": 266, "description": "Listeners are passed the tab object."}], "line_number": 260, "type": "event", "name": "close", "description": "\nThis event is emitted when the tab is closed.  It's also emitted when the\ntab's window is closed.\n"}, {"arguments": [{"datatype": "Tab", "line_number": 282, "description": "Listeners are passed the tab object."}], "line_number": 270, "type": "event", "name": "ready", "description": "\nThis event is emitted when the DOM for the tab's content is ready. It is\nequivalent to the `DOMContentLoaded` event for the given content page.\n\nA single tab will emit this event every time the DOM is loaded: so it will be\nemitted again if the tab's location changes or the content is reloaded.\n\nAfter this event has been emitted, all properties relating to the tab's\ncontent can be used.\n"}, {"arguments": [{"datatype": "Tab", "line_number": 291, "description": "Listeners are passed the tab object."}], "line_number": 286, "type": "event", "name": "activate", "description": "\nThis event is emitted when the tab is made active.\n"}, {"arguments": [{"datatype": "Tab", "line_number": 300, "description": "Listeners are passed the tab object."}], "line_number": 295, "type": "event", "name": "deactivate", "description": "\nThis event is emitted when the tab is made inactive.\n"}], "type": "class", "properties": [{"datatype": "string", "line_number": 159, "type": "property", "name": "title", "description": "The title of the page currently loaded in the tab.\nThis property can be set to change the tab title."}, {"datatype": "String", "line_number": 165, "type": "property", "name": "url", "description": "The URL of the page currently loaded in the tab.\nThis property can be set to load a different URL in the tab."}, {"datatype": "string", "line_number": 171, "type": "property", "name": "favicon", "description": "The URL of the favicon for the page currently loaded in the tab.\nThis property is read-only."}, {"datatype": "integer", "line_number": 177, "type": "property", "name": "index", "description": "The index of the tab relative to other tabs in the application window.\nThis property can be set to change its relative position."}, {"datatype": "boolean", "line_number": 183, "type": "property", "name": "isPinned", "description": "Whether or not tab is pinned as an [app tab][].\nThis property is read-only.\n[app tab]:http://support.mozilla.com/en-US/kb/what-are-app-tabs"}, {"datatype": "method", "line_number": 190, "type": "property", "name": "getThumbnail", "description": "Returns thumbnail data URI of the page currently loaded in this tab."}], "name": "Tab"}], ["markdown", "\n\n"], ["api-json", {"arguments": [{"datatype": "Tab", "line_number": 324, "description": "Listeners are passed the tab object that just opened."}], "line_number": 306, "type": "event", "name": "open", "description": "\nThis event is emitted when a new tab is opened. This does not mean that\nthe content has loaded, only that the browser tab itself is fully visible\nto the user.\n\nProperties relating to the tab's content (for example: `title`, `favicon`,\nand `url`) will not be correct at this point. If you need to access these\nproperties, listen for the `ready` event:\n\n    var tabs = require(\"tabs\");\n    tabs.on('open', function(tab){\n      tab.on('ready', function(tab){\n        console.log(tab.url);\n      });\n    });\n"}], ["markdown", "\n\n"], ["api-json", {"arguments": [{"datatype": "Tab", "line_number": 334, "description": "Listeners are passed the tab object that has closed."}], "line_number": 328, "type": "event", "name": "close", "description": "\nThis event is emitted when a tab is closed. When a window is closed\nthis event will be emitted for each of the open tabs in that window.\n"}], ["markdown", "\n\n"], ["api-json", {"arguments": [{"datatype": "Tab", "line_number": 350, "description": "Listeners are passed the tab object that has loaded."}], "line_number": 338, "type": "event", "name": "ready", "description": "\nThis event is emitted when the DOM for a tab's content is ready.\nIt is equivalent to the `DOMContentLoaded` event for the given content page.\n\nA single tab will emit this event every time the DOM is loaded: so it will be\nemitted again if the tab's location changes or the content is reloaded.\n\nAfter this event has been emitted, all properties relating to the tab's\ncontent can be used.\n"}], ["markdown", "\n\n"], ["api-json", {"arguments": [{"datatype": "Tab", "line_number": 359, "description": "Listeners are passed the tab object that has become active."}], "line_number": 354, "type": "event", "name": "activate", "description": "\nThis event is emitted when an inactive tab is made active.\n"}], ["markdown", "\n\n"], ["api-json", {"arguments": [{"datatype": "Tab", "line_number": 368, "description": "Listeners are passed the tab object that has become inactive."}], "line_number": 363, "type": "event", "name": "deactivate", "description": "\nThis event is emitted when the active tab is made inactive.\n"}], ["markdown", "\n"]]