[["version", 4], ["markdown", "<!-- contributed by Myk Melez [myk@mozilla.org]  -->\n<!-- contributed by Daniel Aquino [mr.danielaquino@gmail.com]  -->\n<!-- contributed by Atul Varma [atul@mozilla.com]  -->\n<!-- edited by Noelle Murata [fiveinchpixie@gmail.com]  -->\n\nThe `preferences-service` module provides access to the\napplication-wide preferences service singleton.\n\n\n"], ["api-json", {"line_number": 10, "name": "set", "params": [{"datatype": "string", "line_number": 13, "required": true, "name": "name", "description": "Preference name."}, {"datatype": "string,number,bool", "line_number": 14, "required": true, "name": "value", "description": "Preference value.\n\n**Example:**\n\n    var name = \"extensions.checkCompatibility.nightly\";\n    require(\"preferences-service\").set(name, false);"}], "signature": "set(name, value)", "type": "function", "description": "Sets the application preference `name` to `value`."}], ["markdown", "\n\n\n"], ["api-json", {"line_number": 23, "name": "get", "returns": {"datatype": "string,number,bool", "line_number": 28, "description": "Preference value, returns a default value if no\npreference is set.\n\n**Example:**\n\n    var name = \"extensions.checkCompatibility.nightly\";\n    var nightlyCompatChk = require(\"preferences-service\").get(name);"}, "params": [{"datatype": "string", "line_number": 26, "required": true, "name": "name", "description": ""}, {"datatype": "string,number,bool", "line_number": 27, "required": true, "name": "defaultValue", "description": "Preference value."}], "signature": "get(name, defaultValue)", "type": "function", "description": "Gets the application preference `name`."}], ["markdown", "\n\n\n"], ["api-json", {"line_number": 38, "name": "has", "returns": {"datatype": "bool", "line_number": 41, "description": "Returns whether or not the application preference `name` exists.\n\n**Example:**\n\n    var name = \"extensions.checkCompatibility.nightly\";\n    if (require(\"preferences-service\").has(name)) {\n      // ...\n    }"}, "params": [{"datatype": "string", "line_number": 40, "required": true, "name": "name", "description": "Preference name."}], "signature": "has(name)", "type": "function", "description": ""}], ["markdown", "\n\n\n"], ["api-json", {"line_number": 52, "name": "isSet", "returns": {"datatype": "bool", "line_number": 55, "description": "Returns whether or not the application preference `name` both exists\nand has been set to a non-default value by the user (or a program\nacting on the user's behalf).\n\n**Example:**\n\n    var name = \"extensions.checkCompatibility.nightly\";\n    if (require(\"preferences-service\").isSet(name)) {\n      // ...\n    }"}, "params": [{"datatype": "string", "line_number": 54, "required": true, "name": "name", "description": "Preference name."}], "signature": "isSet(name)", "type": "function", "description": ""}], ["markdown", "\n\n\n"], ["api-json", {"line_number": 69, "name": "reset", "params": [{"datatype": "string", "line_number": 74, "required": true, "name": "name", "description": "Preference name.\n\n**Example:**\n\n    var name = \"extensions.checkCompatibility.nightly\";\n    require(\"preferences-service\").reset(name);"}], "signature": "reset(name)", "type": "function", "description": "Clears a non-default, user-set value from the application preference\n`name`. If no user-set value is defined on `name`, the function\ndoes nothing."}], ["markdown", "\n"]]