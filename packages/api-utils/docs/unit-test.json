[["version", 4], ["markdown", "<!-- contributed by Atul Varma [atul@mozilla.com]  -->\n<!-- edited by Noelle Murata [fiveinchpixie@gmail.com]  -->\n\n\nThe `unit-test` module makes it easy to find and run unit tests.\n\n"], ["api-json", {"methods": [{"line_number": 12, "name": "pass", "params": [{"datatype": "string", "line_number": 16, "required": false, "name": "message", "description": "Optional passing message."}], "signature": "pass(message)", "type": "method", "description": "Marks a test as passing, with the given optional message.\n"}, {"line_number": 21, "name": "fail", "params": [{"datatype": "string", "line_number": 25, "required": false, "name": "message", "description": "Optional failure message."}], "signature": "fail(message)", "type": "method", "description": "Marks a test as failing, with the given optional message.\n"}, {"line_number": 30, "name": "exception", "params": [{"datatype": "exception", "line_number": 35, "required": true, "name": "e", "description": "An exception."}], "signature": "exception(e)", "type": "method", "description": "Marks a test as failing due to the given exception having been thrown.\nThis can be put in a `catch` clause.\n"}, {"line_number": 39, "name": "assert", "params": [{"datatype": "value", "line_number": 43, "required": true, "name": "a", "description": "Value to verify."}, {"datatype": "string", "line_number": 45, "required": false, "name": "message", "description": "The test is marked as passing or failing depending on the result, logging\n*message* with it."}], "signature": "assert(a, message)", "type": "method", "description": "Ensures that `a` has a truthy value.\n"}, {"line_number": 51, "name": "assertEqual", "params": [{"datatype": "value", "line_number": 55, "required": true, "name": "a", "description": "A value.\n"}, {"datatype": "value", "line_number": 58, "required": true, "name": "b", "description": "Another value.\n"}, {"datatype": "string", "line_number": 61, "required": false, "name": "message", "description": "The test is marked as passing or failing depending on the result, logging\n*message* with it."}], "signature": "assertEqual(a, b, message)", "type": "method", "description": "Ensures that `a == b` without recursing into `a` or `b`.\n"}, {"line_number": 66, "name": "assertNotEqual", "params": [{"datatype": "value", "line_number": 70, "required": true, "name": "a", "description": "A value.\n"}, {"datatype": "value", "line_number": 73, "required": true, "name": "b", "description": "Another value.\n"}, {"datatype": "string", "line_number": 76, "required": false, "name": "message", "description": "The test is marked as passing or failing depending on the result, logging\n*message* with it."}], "signature": "assertNotEqual(a, b, message)", "type": "method", "description": "Ensures that `a != b` without recursing into `a` or `b`.\n"}, {"line_number": 81, "name": "assertStrictEqual", "params": [{"datatype": "value", "line_number": 85, "required": true, "name": "a", "description": "A value.\n"}, {"datatype": "value", "line_number": 88, "required": true, "name": "b", "description": "Another value.\n"}, {"datatype": "string", "line_number": 91, "required": false, "name": "message", "description": "The test is marked as passing or failing depending on the result, logging\n*message* with it."}], "signature": "assertStrictEqual(a, b, message)", "type": "method", "description": "Ensures that `a === b` without recursing into `a` or `b`.\n"}, {"line_number": 97, "name": "assertNotStrictEqual", "params": [{"datatype": "value", "line_number": 101, "required": true, "name": "a", "description": "A value.\n"}, {"datatype": "value", "line_number": 104, "required": true, "name": "b", "description": "Another value.\n"}, {"datatype": "string", "line_number": 107, "required": false, "name": "message", "description": "The test is marked as passing or failing depending on the result, logging\n*message* with it."}], "signature": "assertNotStrictEqual(a, b, message)", "type": "method", "description": "Ensures that `a !== b` without recursing into `a` or `b`.\n"}, {"line_number": 112, "name": "assertMatches", "params": [{"datatype": "string", "line_number": 118, "required": true, "name": "string", "description": "The string to test.\n"}, {"datatype": "regexp", "line_number": 121, "required": true, "name": "regexp", "description": "The string should match this regular expression.\n"}, {"datatype": "string", "line_number": 124, "required": false, "name": "message", "description": "The test is marked as passing or failing depending on the result, logging\n*message* with it."}], "signature": "assertMatches(string, regexp, message)", "type": "method", "description": "Ensures that the given string matches the given regular expression.\nIf it does, marks a test as passing, otherwise marks a test as\nfailing.\n"}, {"line_number": 130, "name": "assertRaises", "params": [{"datatype": "function", "line_number": 140, "required": true, "name": "func", "description": "A function that should raise an exception when called.\n"}, {"datatype": "string,regexp", "line_number": 143, "required": true, "name": "predicate", "description": "A string or regular expression to compare to the exception's message.\n"}, {"datatype": "string", "line_number": 146, "required": false, "name": "message", "description": "Depending on the outcome, a test is marked as passing or failing, and\n*message* is logged."}], "signature": "assertRaises(func, predicate, message)", "type": "method", "description": "Calls the function `func` with no arguments, expecting an exception\nto be raised. If nothing is raised, marks the test as failing. If an\nexception is raised, the exception's `message` property is\ncompared with `predicate`: if `predicate` is a string, then a\nsimple equality comparison is done with `message`. Otherwise,\nif `predicate` is a regular expression, `message` is tested\nagainst it.\n"}, {"line_number": 152, "name": "waitUntilDone", "params": [{"datatype": "integer", "line_number": 160, "required": false, "name": "timeout", "description": "If this number of milliseconds elapses and `test.done()` has not yet been\ncalled, the test is marked as failing."}], "signature": "waitUntilDone(timeout)", "type": "method", "description": "Puts the test runner into asynchronous testing mode, waiting up to\n*timeout* milliseconds for `test.done()` to be called.  This\nis intended for use in situations where a test suite schedules a\ncallback, calls `test.waitUntilDone()`, and then calls\n`test.done()` in the callback.\n"}, {"line_number": 165, "signature": "done()", "type": "method", "name": "done", "description": "Marks a test as being complete.  Assumes a previous call to\n`test.waitUntilDone()`."}], "line_number": 7, "type": "class", "name": "test", "description": "Each function which represents a test case is passed a single argument\n`test`, which represents the test runner.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}], ["markdown", "\n\n\n"], ["api-json", {"line_number": 174, "name": "waitUntil", "params": [{"datatype": "function", "line_number": 178, "required": true, "name": "a", "description": "Function that returns the value to verify."}, {"datatype": "string", "line_number": 180, "required": false, "name": "message", "description": "The test is marked as passing or failing depending on the result, logging\n*message* with it."}], "signature": "waitUntil(a, message)", "type": "method", "description": "Ensures that `a` returns a truthy value within a reasonable amount of time.\n"}], ["markdown", "\n\n\n"], ["api-json", {"line_number": 186, "name": "waitUntilEqual", "params": [{"datatype": "Function", "line_number": 191, "required": true, "name": "a", "description": "A value, or a function that returns a value.\n"}, {"datatype": "value", "line_number": 194, "required": true, "name": "b", "description": "Another value, or a function that returns value.\n"}, {"datatype": "string", "line_number": 197, "required": false, "name": "message", "description": "The test is marked as passing or failing depending on the result, logging\n*message* with it."}], "signature": "waitUntilEqual(a, b, message)", "type": "method", "description": "Ensures that `a == b` returned values or values without without recursing\ninto `a` or `b`.\n"}], ["markdown", "\n\n"], ["api-json", {"line_number": 202, "name": "waitUntilNotEqual", "params": [{"datatype": "Function", "line_number": 206, "required": true, "name": "a", "description": "A value, or a function that returns a value.\n"}, {"datatype": "value", "line_number": 209, "required": true, "name": "b", "description": "Another value, or a function that returns another value.\n"}, {"datatype": "string", "line_number": 212, "required": false, "name": "message", "description": "The test is marked as passing or failing depending on the result, logging\n*message* with it."}], "signature": "waitUntilNotEqual(a, b, message)", "type": "method", "description": "Ensures that `a != b` without recursing into `a` or `b`.\n"}], ["markdown", "\n\n\n"], ["api-json", {"line_number": 218, "name": "waitUntilMatches", "params": [{"datatype": "Function", "line_number": 224, "required": true, "name": "string", "description": "A function that returns the string to test.\n"}, {"datatype": "regexp", "line_number": 227, "required": true, "name": "regexp", "description": "The string should match this regular expression.\n"}, {"datatype": "string", "line_number": 230, "required": false, "name": "message", "description": "The test is marked as passing or failing depending on the result, logging\n*message* with it."}], "signature": "waitUntilMatches(string, regexp, message)", "type": "method", "description": "Ensures that the given string matches the given regular expression.\nIf it does, marks the test as passing, otherwise marks the test as\nfailing.\n"}], ["markdown", "\n\n\n\n"], ["api-json", {"line_number": 237, "name": "findAndRunTests", "params": [{"line_number": 245, "name": "options", "datatype": "object", "required": true, "props": [{"datatype": "string", "line_number": 247, "required": true, "name": "dirs", "description": "A list of absolute paths representing directories to search\nfor tests in.  It's assumed that all of these directories are also\nin the module search path, i.e. any JS files found in them are\nSecurableModules that can be loaded via a call to\n`require()`."}, {"datatype": "function", "line_number": 253, "required": true, "name": "onDone", "description": "A function to call when testing is complete."}], "description": "An object with the following properties:"}], "signature": "findAndRunTests(options)", "type": "function", "description": "The list of directories is searched for SecurableModules that start\nwith the prefix `test-`.  Each module matching this criteria is\nexpected to export functions that are test cases or a suite of test\ncases; each is called with a single argument, which is a Test Runner\nObject.\n"}], ["markdown", "\n"]]